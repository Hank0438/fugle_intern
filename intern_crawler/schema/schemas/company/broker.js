/**
 * Created by genexliu on 2015/5/26.
 *
 * This schema is generated by running the following code on existing
 * collection 'broker'.
 *

mr = db.runCommand({
  "mapreduce" : "broker",
  "map" : function() {
    for (var key in this) { emit(key + '/' + (typeof this[key]), null); }
  },
  "reduce" : function(key, stuff) { return null; }, 
  "out": "broker_keys"
});
db[mr.result].distinct('_id')

 */
var mongoose = require('mongoose');
var Schema = mongoose.Schema;

var BrokerSchema = new Schema({
    symbol_id: {type: String},

    broker_name: {type: String},
    link: {type: String},
    phone: {type: String},
    address: {type: String},
    start_date: {type: String},

    isBranch: {type: Boolean},
    branchlink: {type: String},
    detail: {type: Object},

    isClosed: {type: Boolean},
    closedate: {type: String},
    reason: {type: String},
    successor: {type: String},

},  { collection : 'broker' });

BrokerSchema.statics = {
    getBrokerName : function(symbol_id){
        return this.findOne({symbol_id: symbol_id}, {broker_name:1}).lean().exec().then(function(data){
            if (data && data.broker_name) {
                return data.broker_name;
            }
            return '';
        }).then(undefined, function(err){
            return '';
        });
    }
};

module.exports = BrokerSchema;
